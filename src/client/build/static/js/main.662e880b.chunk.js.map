{"version":3,"sources":["routes/Login.js","routes/Register.js","routes/Home.js","static/404.jpg","routes/NotFound.js","routes/Loading.js","routes/User.js","App.js","reportWebVitals.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","useForm","mode","reValidateMode","criteriaMode","shouldFocusError","shouldUnregister","control","register","errors","handleSubmit","useState","showPassword","setShowPassword","onSubmit","data","a","console","log","fetch","method","headers","body","JSON","stringify","response","json","token","localStorage","setItem","Cookies","set","path","window","location","message","Container","component","maxWidth","CssBaseline","className","Avatar","name","Grid","container","item","xs","as","TextField","fullWidth","id","defaultValue","label","inputRef","required","maxLength","value","minLength","username","type","pattern","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","password","Button","Box","mt","SignUp","alert","autoComplete","email","Home","image","height","left","top","transform","NotFound","Fragment","style","src","error","alt","Loading","delay-hide","User","checkRefreshToken","credentials","result","accesstoken","authenticate","getItem","authorization","code","useEffect","addEventListener","event","App","exact","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.662e880b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { InputAdornment, IconButton } from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useForm, Controller } from \"react-hook-form\";\nimport Cookies from 'universal-cookie';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Flimble\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n\n  const { control, register, errors, handleSubmit } = useForm({\n    mode:  'onBlur', \n    reValidateMode: 'onChange',\n    criteriaMode: \"firstError\",\n    shouldFocusError: true,\n    shouldUnregister: true,\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n  const onSubmit = async data => {\n    console.log(\"SUBMITTED DATA\");\n    let response = await fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data)\n    });\n    response = await response.json();\n    const token = response.token;\n    console.log(\"TOKEN: \" + token);\n    if(token != null){\n      localStorage.setItem('accesstoken', token);\n      const cookies = new Cookies();\n      cookies.set ('accesstoken', token, { path: '/user/ssh' });\n      window.location.href = '/user'\n    }\n    else{\n      console.log(JSON.stringify(response.message));\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form name=\"loginForm\" className={classes.form}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Controller\n                as={TextField}\n                name=\"username\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"username\"\n                defaultValue=\"\"\n                label=\"Username\"\n                inputRef={\n                  register({\n                    required: \"Please enter a username\",\n                    maxLength: {\n                      value: 16,\n                      message: \"Please enter a valid username\"\n                    },\n                    minLength: {\n                      value: 4,\n                      message: \"Please enter a valid username\"\n                    }\n                  })\n                }   \n                control={control}               \n              />\n            {errors.username && <p>{errors.username.message}</p>}\n            </Grid>\n            <Grid item xs={12}>\n              <Controller\n                as={TextField}\n                name=\"password\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"password\"\n                defaultValue=\"\"\n                type={showPassword ? \"text\" : \"password\"}\n                label=\"Password\"\n                inputRef={\n                  register({\n                    pattern: {\n                      value: /^(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-.]).{8,64}$/,\n                      message: \"Please enter a valid password\"\n                    }\n                  })\n                }\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                      >\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}                 \n                control={control}               \n              />\n              {errors.password && <p>{errors.password.message}</p>}\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleSubmit(onSubmit)}\n          >\n            Sign In\n          </Button>\n        </form>\n        <Link href=\"register\" variant=\"body2\" align=\"center\">\n            Don't have an account? Register here.\n          </Link>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import React, { useState } from 'react';\nimport { InputAdornment, IconButton } from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useForm, Controller } from \"react-hook-form\";\nimport Cookies from 'universal-cookie';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Flimble\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n    const classes = useStyles();\n    const { control, register, errors, handleSubmit } = useForm({\n        mode:  'onBlur', \n        reValidateMode: 'onChange',\n        criteriaMode: \"firstError\",\n        shouldFocusError: true,\n        shouldUnregister: true,\n      });\n    const [showPassword, setShowPassword] = useState(false);\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\n    const onSubmit = async data => {\n    console.log(\"SUBMITTED DATA\");\n    let response = await fetch('/api/register', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data)\n    });\n    console.log(\"RESPONSE RECIEVED\");\n    response = await response.json();\n    const token = response.token;\n    console.log(\"TOKEN: \" + token);\n    if(token != null){\n      localStorage.setItem('accesstoken', token);\n      const cookies = new Cookies();\n      cookies.set ('accesstoken', token, { path: '/user/ssh' });\n      window.location.href = '/user'\n    }\n    else{\n      alert(JSON.stringify(response.message));\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form name=\"registerForm\" className={classes.form}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Controller\n                as={TextField}\n                name=\"username\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"username\"\n                defaultValue=\"\"\n                label=\"Username\"\n                inputRef={\n                  register({\n                    required: \"Please enter a username\",\n                    maxLength: {\n                      value: 16,\n                      message: \"Please enter a username between 4 and 16 characters\"\n                    },\n                    minLength: {\n                      value: 4,\n                      message: \"Please enter a username between 4 and 16 characters\"\n                    }\n                  })\n                }   \n                control={control}               \n              />\n            {errors.username && <p>{errors.username.message}</p>}\n            </Grid>\n            <Grid item xs={12}>\n              <Controller\n                as={TextField}\n                name=\"email\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"email\"\n                defaultValue=\"\"\n                label=\"Email\"\n                inputRef={\n                  register({\n                    required: \"Please enter an email.\",\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: \"Invalid Email Address\"\n                    }\n                  })\n                }\n                autoComplete=\"email\"   \n                control={control}               \n              />\n              {errors.email && <p>{errors.email.message}</p>}\n            </Grid>\n            <Grid item xs={12}>\n              <Controller\n                as={TextField}\n                name=\"password\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"password\"\n                defaultValue=\"\"\n                type={showPassword ? \"text\" : \"password\"}\n                label=\"Password\"\n                inputRef={\n                  register({\n                    required: \"Please enter a password.\",\n                    minLength: {\n                      value: 8,\n                      message: \"Password must contain 8 characters.\"\n                    },\n                    maxLength: {\n                      value: 64,\n                      message: \"Password must not be longer than 64 characters.\"\n                    },\n                    pattern: {\n                      value: /^(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-.]).{8,}$/,\n                      message: \"Password must contain a number and a special character.\"\n                    }\n                  })\n                }\n                InputProps={{ // <-- This is where the toggle button is added.\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                      >\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}                 \n                control={control}               \n              />\n              {errors.password && <p>{errors.password.message}</p>}\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleSubmit(onSubmit)}\n          >\n            Sign Up\n          </Button>\n        </form>\n        <Link href=\"login\" variant=\"body2\" align=\"center\">\n            Already have an account? Sign in here\n        </Link>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","export default function Home() {\n      return (\n        \"HELLO\"\n    )\n  }","export default __webpack_public_path__ + \"static/media/404.38a2ceeb.jpg\";","import React from 'react';\nimport error from '../static/404.jpg'\n\nconst image = {\n    height:'50%',\n    width:'50%',\n    position: 'absolute', left: '50%', top: '40%',\n    transform: 'translate(-50%, -50%)'\n}\n\nexport default function NotFound(){\n    \n    return(\n        <React.Fragment>\n            <img style={image} src={error} alt=\"404\" />\n        </React.Fragment>\n    )\n}","import React, { useEffect } from 'react';\nimport '../static/loading.css';\n\n\nexport default function Loading(){\n\n    return(\n        <React.Fragment>\n            <div className=\"loading\" delay-hide=\"50000\"></div>\n        </React.Fragment>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport Cookies from 'universal-cookie';\nimport Loading from './Loading'\n\nexport default function User(){\n\n    async function checkRefreshToken() {\n        const result = await (\n          await fetch('http://localhost:5000/api/refresh_token', {\n            method: 'POST',\n            credentials: 'same-origin',\n            headers: {\n              'Content-Type': 'application/json',\n            }\n          })).json();\n        console.log(\"Access token: \" + result.accesstoken);\n        localStorage.setItem('accesstoken', result.accesstoken);\n        const cookies = new Cookies();\n        cookies.set('accesstoken', result.accesstoken, { path: '/user/ssh' });\n      }\n      \n    //  Onload Verify User\n    // const [showTerminal, setShowTerminal] = useState(false);\n    async function authenticate() {\n        let token = localStorage.getItem('accesstoken');\n        console.log(\"Token: \" + token);\n        let result;\n        if(token)\n        {\n            result = await fetch('http://localhost:5000/api/authenticate', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    authorization: 'Bearer '+ token,\n                }\n            })\n            result = await result.json(); \n            console.log(result.code);\n            if(result.code > 0)\n            {\n                // result = await fetch('http://localhost:5000/user/ssh', {\n                //     method: 'POST',\n                //     headers: {\n                //         'Content-Type': 'application/json',\n                //         authorization: 'Bearer '+ token,\n                //     }\n                // })\n                window.location.href = '/user/ssh'\n                return;\n            }\n        }\n        console.log(\"Bad access token, requesting a new access token from the server.\");\n        await checkRefreshToken();\n        //      Attempt to send authenticate with new access token        //\n\n        token = localStorage.getItem('accesstoken');\n        console.log(\"New Access Token: \" + token);\n        result = await fetch('http://localhost:5000/api/authenticate', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                authorization: 'Bearer '+ token,\n            }\n        })\n        result = await result.json(); \n\n        //      If null refresh token redirect, otherwise render screen     //\n\n        console.log(\"CODE: \" + result.code);\n\n        if(result.code < 0) \n            window.location.href = '/login';\n        else\n        {\n            // result = await fetch('http://localhost:5000/user/ssh', {\n            //     method: 'POST',\n            //     headers: {\n            //         'Content-Type': 'application/json',\n            //         authorization: 'Bearer '+ token,\n            //     }\n            // })\n            window.location.href = '/user/ssh';\n        }\n    }\n\n    useEffect( async () => {\n        authenticate();\n        window.addEventListener('pageshow', (event) => {        //      Allows authentication even if user presses back\n            authenticate();\n        });\n    }, [])\n\n    //      Render loading screen while we are waiting for connection.  When a connection is made render terminal.      //\n\n    return(\n        <React.Fragment>\n            <Loading></Loading>\n        </React.Fragment>\n    )\n}","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './routes/Login';\nimport Register from './routes/Register';\nimport Home from './routes/Home';\nimport NotFound from './routes/NotFound';\nimport User from './routes/User';\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Switch>\n          <Route exact to path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/user\">\n            <User />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}