{"version":3,"sources":["routes/Login.js","routes/Register.js","routes/Home.js","static/404.jpg","routes/NotFound.js","routes/Loading.js","routes/User.js","App.js","reportWebVitals.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","useForm","mode","reValidateMode","criteriaMode","shouldFocusError","shouldUnregister","control","register","errors","handleSubmit","useState","showPassword","setShowPassword","serverError","setServerError","onSubmit","data","a","fetch","method","headers","body","JSON","stringify","response","json","token","console","log","localStorage","setItem","Cookies","set","path","window","location","message","Container","component","maxWidth","CssBaseline","className","Avatar","name","username","Alert","severity","password","Grid","container","item","xs","as","TextField","fullWidth","id","defaultValue","label","inputRef","required","maxLength","value","minLength","type","pattern","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","Button","Box","mt","SignUp","email","autoComplete","mainTitle","textAlign","fontSize","subTitle","createMuiTheme","shape","borderRadius","Home","Fragment","options","backgroundMode","enable","zIndex","particles","number","density","value_area","stroke","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","fps_limit","Fade","in","timeout","style","enter","ThemeProvider","left","top","transform","NotFound","error","alt","Loading","delay-hide","User","checkRefreshToken","credentials","result","accesstoken","authenticate","getItem","authorization","code","useEffect","addEventListener","event","App","exact","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dca2cd9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { InputAdornment, IconButton } from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useForm, Controller } from \"react-hook-form\";\nimport Cookies from 'universal-cookie';\nimport Alert from '@material-ui/lab/Alert';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Flimble\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n\n  const { control, register, errors, handleSubmit } = useForm({\n    mode:  'onBlur', \n    reValidateMode: 'onChange',\n    criteriaMode: \"firstError\",\n    shouldFocusError: true,\n    shouldUnregister: true,\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [serverError, setServerError] = useState(false)\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n  const onSubmit = async data => {\n    let response = await fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data)\n    });\n    response = await response.json();\n    const token = response.token;\n    console.log(\"TOKEN: \" + token);\n    if(token != null){\n      localStorage.setItem('accesstoken', token);\n      const cookies = new Cookies();\n      cookies.set ('accesstoken', token, { path: '/user/ssh' });\n      window.location.href = '/user'\n    }\n    else{\n      setServerError(response.message)\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form name=\"loginForm\" className={classes.form}>\n          {errors.username && <Alert variant=\"filled\" severity=\"error\">{errors.username.message}</Alert>}\n          {errors.password && <Alert variant=\"filled\" severity=\"error\">{errors.password.message}</Alert>}\n          {serverError && <Alert variant=\"filled\" severity=\"error\">{serverError}</Alert>}\n          <br />\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Controller\n                as={TextField}\n                name=\"username\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"username\"\n                defaultValue=\"\"\n                label=\"Username\"\n                inputRef={\n                  register({\n                    required: \"Please enter a username\",\n                    maxLength: {\n                      value: 16,\n                      message: \"Please enter a valid username\"\n                    },\n                    minLength: {\n                      value: 4,\n                      message: \"Please enter a valid username\"\n                    }\n                  })\n                }   \n                control={control}               \n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Controller\n                as={TextField}\n                name=\"password\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"password\"\n                defaultValue=\"\"\n                type={showPassword ? \"text\" : \"password\"}\n                label=\"Password\"\n                inputRef={\n                  register({\n                    pattern: {\n                      value: /^(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-.]).{8,64}$/,\n                      message: \"Please enter a valid password\"\n                    }\n                  })\n                }\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                      >\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}                 \n                control={control}               \n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleSubmit(onSubmit)}\n          >\n            Sign In\n          </Button>\n        </form>\n        <Link href=\"register\" variant=\"body2\" align=\"center\">\n            Don't have an account? Register here.\n          </Link>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import React, { useState } from 'react';\nimport { InputAdornment, IconButton } from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useForm, Controller } from \"react-hook-form\";\nimport Cookies from 'universal-cookie';\nimport Alert from '@material-ui/lab/Alert';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Flimble\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n    const classes = useStyles();\n    const { control, register, errors, handleSubmit } = useForm({\n        mode:  'onBlur', \n        reValidateMode: 'onChange',\n        criteriaMode: \"firstError\",\n        shouldFocusError: true,\n        shouldUnregister: true,\n      });\n    const [showPassword, setShowPassword] = useState(false);\n    const [serverError, setServerError] = useState(false)\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\n    const onSubmit = async data => {\n    console.log(\"SUBMITTED DATA\");\n    let response = await fetch('/api/register', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data)\n    });\n    console.log(\"RESPONSE RECIEVED\");\n    response = await response.json();\n    const token = response.token;\n    console.log(\"TOKEN: \" + token);\n    if(token != null){\n      localStorage.setItem('accesstoken', token);\n      const cookies = new Cookies();\n      cookies.set ('accesstoken', token, { path: '/user/ssh' });\n      window.location.href = '/user'\n    }\n    else{\n      setServerError(response.message)\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form name=\"registerForm\" className={classes.form}>\n          {errors.username && <Alert variant=\"filled\" severity=\"error\">{errors.username.message}</Alert>}\n          {errors.email && <Alert variant=\"filled\" severity=\"error\">{errors.email.message}</Alert>}\n          {errors.password && <Alert variant=\"filled\" severity=\"error\">{errors.password.message}</Alert>}\n          {serverError && <Alert variant=\"filled\" severity=\"error\">{serverError}</Alert>}\n          <br />\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Controller\n                as={TextField}\n                name=\"username\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"username\"\n                defaultValue=\"\"\n                label=\"Username\"\n                inputRef={\n                  register({\n                    required: \"Please enter a username\",\n                    maxLength: {\n                      value: 16,\n                      message: \"Please enter a username between 4 and 16 characters\"\n                    },\n                    minLength: {\n                      value: 4,\n                      message: \"Please enter a username between 4 and 16 characters\"\n                    }\n                  })\n                }   \n                control={control}               \n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Controller\n                as={TextField}\n                name=\"email\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"email\"\n                defaultValue=\"\"\n                label=\"Email\"\n                inputRef={\n                  register({\n                    required: \"Please enter an email.\",\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: \"Invalid Email Address\"\n                    }\n                  })\n                }\n                autoComplete=\"email\"   \n                control={control}               \n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Controller\n                as={TextField}\n                name=\"password\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"password\"\n                defaultValue=\"\"\n                type={showPassword ? \"text\" : \"password\"}\n                label=\"Password\"\n                inputRef={\n                  register({\n                    required: \"Please enter a password.\",\n                    minLength: {\n                      value: 8,\n                      message: \"Password must contain 8 characters.\"\n                    },\n                    maxLength: {\n                      value: 64,\n                      message: \"Password must not be longer than 64 characters.\"\n                    },\n                    pattern: {\n                      value: /^(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-.]).{8,}$/,\n                      message: \"Password must contain a number and a special character.\"\n                    }\n                  })\n                }\n                InputProps={{ // <-- This is where the toggle button is added.\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                      >\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}                 \n                control={control}               \n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleSubmit(onSubmit)}\n          >\n            Sign Up\n          </Button>\n        </form>\n        <Link href=\"login\" variant=\"body2\" align=\"center\">\n            Already have an account? Sign in here\n        </Link>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import React from 'react';\nimport Fade from '@material-ui/core/Fade';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Particles from \"react-tsparticles\";\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst mainTitle ={\n  marginTop:'15%',\n  textAlign:'center',\n  fontSize:'500%',\n}\n\nconst subTitle = {\n  textAlign:'center',\n  fontSize:'150%',\n}\n\nconst theme = createMuiTheme({\n  shape: {\n    borderRadius: 8,\n  },\n  spacing: 8,\n}) \n\n\n\nexport default function Home() {\n      return (\n        <React.Fragment>\n          <Particles\n          options={{\n            backgroundMode: {\n              enable: true,\n              zIndex: -1\n            },\n            particles: {\n              number: {\n                value: 20,\n                density: {\n                  enable: true,\n                  value_area: 800\n                }\n              },\n              color: {\n                value: [\"#2EB67D\", \"#ECB22E\", \"#E01E5B\", \"#36C5F0\"]\n              },\n              shape: {\n                type: [\"circle\"],\n                stroke: {\n                  width: 0,\n                  color: \"#fff\"\n                },\n                polygon: {\n                  nb_sides: 5\n                },\n                image: {\n                  src: \"https://cdn.freebiesupply.com/logos/large/2x/slack-logo-icon.png\",\n                  width: 100,\n                  height: 100\n                }\n              },\n              opacity: {\n                value: 1,\n                random: false,\n                anim: {\n                  enable: false,\n                  speed: 1,\n                  opacity_min: 0.1,\n                  sync: false\n                }\n              },\n              size: {\n                value: 8,\n                random: true,\n                anim: {\n                  enable: false,\n                  speed: 10,\n                  size_min: 10,\n                  sync: false\n                }\n              },\n              line_linked: {\n                enable: false,\n                distance: 150,\n                color: \"#808080\",\n                opacity: 0.4,\n                width: 1\n              },\n              move: {\n                enable: true,\n                speed: 1.5,\n                direction: \"none\",\n                random: false,\n                straight: false,\n                out_mode: \"out\",\n                bounce: false,\n                attract: {\n                  enable: false,\n                  rotateX: 600,\n                  rotateY: 1200\n                }\n              }\n            },\n            interactivity: {\n              detect_on: \"canvas\",\n              events: {\n                onhover: {\n                  enable: true,\n                  mode: \"grab\"\n                },\n                onclick: {\n                  enable: true,\n                  mode: \"push\"\n                },\n                resize: true\n              },\n              modes: {\n                grab: {\n                  distance: 140,\n                  line_linked: {\n                    opacity: 0  //Changed opacity to 0 to prevent lines\n                  }\n                },\n                bubble: {\n                  distance: 400,\n                  size: 40,\n                  duration: 2,\n                  opacity: 8,\n                  speed: 3\n                },\n                repulse: {\n                  distance: 200,\n                  duration: 0.4\n                },\n                push: {\n                  particles_nb: 4\n                },\n                remove: {\n                  particles_nb: 2\n                }\n              }\n            },\n            retina_detect: true,\n            fps_limit: 60,\n          }}\n        />\n        <Box>\n          <Fade in timeout={1500}>\n            <h1 style={mainTitle}>Flimble</h1>\n          </Fade>\n          <Fade in timeout={{enter:6000}}>\n            <Box>\n              <h2 style={subTitle}>Your browser-based Ubuntu Terminal</h2>\n            </Box>            \n          </Fade>\n          <Fade in timeout={{enter:7000}}>\n            <Box textAlign='center'>\n              <ThemeProvider theme={theme}>\n                <Button variant='contained' color=\"primary\" href='/login'>\n                  Get Started\n                </Button>\n              </ThemeProvider>\n            </Box>\n          </Fade>\n        </Box>\n      </React.Fragment>\n    )\n  }","export default __webpack_public_path__ + \"static/media/404.38a2ceeb.jpg\";","import React from 'react';\nimport error from '../static/404.jpg'\n\nconst image = {\n    height:'50%',\n    width:'50%',\n    position: 'absolute', left: '50%', top: '40%',\n    transform: 'translate(-50%, -50%)'\n}\n\nexport default function NotFound(){\n    \n    return(\n        <React.Fragment>\n            <img style={image} src={error} alt=\"404\"/>\n        </React.Fragment>\n    )\n}","import React from 'react';\nimport '../static/loading.css';\n\n\nexport default function Loading(){\n\n    return(\n        <React.Fragment>\n            <div className=\"loading\" delay-hide=\"50000\"></div>\n        </React.Fragment>\n    )\n}","import React, { useEffect } from 'react';\nimport Cookies from 'universal-cookie';\nimport Loading from './Loading'\n\nexport default function User(){\n\n    async function checkRefreshToken() {\n        const result = await (\n          await fetch('http://localhost:5000/api/refresh_token', {\n            method: 'POST',\n            credentials: 'same-origin',\n            headers: {\n              'Content-Type': 'application/json',\n            }\n          })).json();\n        console.log(\"Access token: \" + result.accesstoken);\n        localStorage.setItem('accesstoken', result.accesstoken);\n        const cookies = new Cookies();\n        cookies.set('accesstoken', result.accesstoken, { path: '/user/ssh' });\n      }\n      \n    //  Onload Verify User\n    // const [showTerminal, setShowTerminal] = useState(false);\n    async function authenticate() {\n        let token = localStorage.getItem('accesstoken');\n        console.log(\"Token: \" + token);\n        let result;\n        if(token)\n        {\n            result = await fetch('http://localhost:5000/api/authenticate', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    authorization: 'Bearer '+ token,\n                }\n            })\n            result = await result.json(); \n            console.log(result.code);\n            if(result.code > 0)\n            {\n                // result = await fetch('http://localhost:5000/user/ssh', {\n                //     method: 'POST',\n                //     headers: {\n                //         'Content-Type': 'application/json',\n                //         authorization: 'Bearer '+ token,\n                //     }\n                // })\n                window.location.href = '/user/ssh'\n                return;\n            }\n        }\n        console.log(\"Bad access token, requesting a new access token from the server.\");\n        await checkRefreshToken();\n        //      Attempt to send authenticate with new access token        //\n\n        token = localStorage.getItem('accesstoken');\n        console.log(\"New Access Token: \" + token);\n        result = await fetch('http://localhost:5000/api/authenticate', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                authorization: 'Bearer '+ token,\n            }\n        })\n        result = await result.json(); \n\n        //      If null refresh token redirect, otherwise render screen     //\n\n        console.log(\"CODE: \" + result.code);\n\n        if(result.code < 0) \n            window.location.href = '/login';\n        else\n        {\n            // result = await fetch('http://localhost:5000/user/ssh', {\n            //     method: 'POST',\n            //     headers: {\n            //         'Content-Type': 'application/json',\n            //         authorization: 'Bearer '+ token,\n            //     }\n            // })\n            window.location.href = '/user/ssh';\n        }\n    }\n\n    useEffect( async () => {\n        authenticate();\n        window.addEventListener('pageshow', (event) => {        //      Allows authentication even if user presses back\n            authenticate();\n        });\n    }, [])\n\n    //      Render loading screen while we are waiting for connection.  When a connection is made render terminal.      //\n\n    return(\n        <React.Fragment>\n            <Loading></Loading>\n        </React.Fragment>\n    )\n}","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './routes/Login';\nimport Register from './routes/Register';\nimport Home from './routes/Home';\nimport NotFound from './routes/NotFound';\nimport User from './routes/User';\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Switch>\n          <Route exact to path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/user\">\n            <User />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}